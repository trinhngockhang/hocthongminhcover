import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';
import getDisplayName from '../../util/getDisplayName';
import DropdownItemSelectionManager from '../context/DropdownItemSelectionManager';


// HOC that typically wraps @atlaskit/item/ItemGroup
var withDropdownItemSelectionManager = function withDropdownItemSelectionManager(WrappedComponent, selectionBehavior) {
  var _class, _temp;

  return _temp = _class = function (_Component) {
    _inherits(WithDropdownItemSelectionManager, _Component);

    function WithDropdownItemSelectionManager() {
      _classCallCheck(this, WithDropdownItemSelectionManager);

      return _possibleConstructorReturn(this, (WithDropdownItemSelectionManager.__proto__ || _Object$getPrototypeOf(WithDropdownItemSelectionManager)).apply(this, arguments));
    }

    _createClass(WithDropdownItemSelectionManager, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            children = _props.children,
            id = _props.id,
            otherProps = _objectWithoutProperties(_props, ['children', 'id']);

        return React.createElement(
          WrappedComponent,
          otherProps,
          React.createElement(
            DropdownItemSelectionManager,
            {
              groupId: id,
              behavior: selectionBehavior
            },
            children
          )
        );
      }
    }]);

    return WithDropdownItemSelectionManager;
  }(Component), _class.displayName = 'WithDropdownItemSelectionManager(' + getDisplayName(WrappedComponent) + ')', _temp;
};

export default withDropdownItemSelectionManager;