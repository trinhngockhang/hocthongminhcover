import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Children, cloneElement, Component } from 'react';
import withDeprecationWarnings from './withDeprecationWarnings';
import Group, { GroupItem } from '../styled/ButtonGroup';

var ButtonGroup = function (_Component) {
  _inherits(ButtonGroup, _Component);

  function ButtonGroup() {
    _classCallCheck(this, ButtonGroup);

    return _possibleConstructorReturn(this, (ButtonGroup.__proto__ || _Object$getPrototypeOf(ButtonGroup)).apply(this, arguments));
  }

  _createClass(ButtonGroup, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          appearance = _props.appearance,
          children = _props.children;


      return React.createElement(
        Group,
        null,
        Children.map(children, function (child, idx) {
          if (child === null || child === false) {
            return child;
          }
          return React.createElement(
            GroupItem,
            { key: idx },
            appearance ? cloneElement(child, { appearance: appearance }) : child
          );
        })
      );
    }
  }]);

  return ButtonGroup;
}(Component);

ButtonGroup.defaultProps = {
  appearance: 'default'
};


export default withDeprecationWarnings(ButtonGroup);