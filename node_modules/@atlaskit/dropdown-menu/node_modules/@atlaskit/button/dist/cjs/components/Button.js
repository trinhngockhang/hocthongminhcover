'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonBase = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _taggedTemplateLiteral2 = require('babel-runtime/helpers/taggedTemplateLiteral');

var _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);

var _templateObject = (0, _taggedTemplateLiteral3.default)(['\n  ', ';\n'], ['\n  ', ';\n']),
    _templateObject2 = (0, _taggedTemplateLiteral3.default)(['\n  a& {\n    ', ';\n  }\n'], ['\n  a& {\n    ', ';\n  }\n']),
    _templateObject3 = (0, _taggedTemplateLiteral3.default)(['&,a&,&:hover,&:active,&:focus{', '}'], ['&,a&,&:hover,&:active,&:focus{', '}']);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _analyticsNext = require('@atlaskit/analytics-next');

var _package = require('../../package.json');

var _withDeprecationWarnings = require('./withDeprecationWarnings');

var _withDeprecationWarnings2 = _interopRequireDefault(_withDeprecationWarnings);

var _getButtonProps = require('./getButtonProps');

var _getButtonProps2 = _interopRequireDefault(_getButtonProps);

var _CustomComponentProxy = require('./CustomComponentProxy');

var _CustomComponentProxy2 = _interopRequireDefault(_CustomComponentProxy);

var _getButtonStyles = require('../styled/getButtonStyles');

var _getButtonStyles2 = _interopRequireDefault(_getButtonStyles);

var _ButtonContent = require('../styled/ButtonContent');

var _ButtonContent2 = _interopRequireDefault(_ButtonContent);

var _ButtonWrapper = require('../styled/ButtonWrapper');

var _ButtonWrapper2 = _interopRequireDefault(_ButtonWrapper);

var _IconWrapper = require('../styled/IconWrapper');

var _IconWrapper2 = _interopRequireDefault(_IconWrapper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var StyledButton = _styledComponents2.default.button(_templateObject, _getButtonStyles2.default);
StyledButton.displayName = 'StyledButton';

// Target the <a> here to override a:hover specificity.
var StyledLink = _styledComponents2.default.a(_templateObject2, _getButtonStyles2.default);
StyledLink.displayName = 'StyledLink';

var StyledSpan = _styledComponents2.default.span(_templateObject, _getButtonStyles2.default);
StyledSpan.displayName = 'StyledSpan';

var createStyledComponent = function createStyledComponent() {
  // Override pseudo-state specificity.
  // This is necessary because we don't know what DOM element the custom component will render.
  var component = (0, _styledComponents2.default)(
  //CustomComponentProxy is absolutely valid here, so this seems a
  // problem with styled-components flow definitions
  // $FlowFixMe
  _CustomComponentProxy2.default)(_templateObject3, _getButtonStyles2.default);
  component.displayName = 'StyledCustomComponent';
  return component;
};

var Button = function (_Component) {
  (0, _inherits3.default)(Button, _Component);

  function Button() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Button);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Button.__proto__ || (0, _getPrototypeOf2.default)(Button)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isActive: false,
      isFocus: false,
      isHover: false
    }, _this.customComponent = null, _this.onMouseEnter = function () {
      return _this.setState({ isHover: true });
    }, _this.onMouseLeave = function () {
      return _this.setState({ isHover: false, isActive: false });
    }, _this.onMouseDown = function (e) {
      e.preventDefault();
      _this.setState({ isActive: true });
    }, _this.onMouseUp = function () {
      return _this.setState({ isActive: false });
    }, _this.onFocus = function (event) {
      _this.setState({ isFocus: true });
      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
    }, _this.onBlur = function (event) {
      _this.setState({ isFocus: false });
      if (_this.props.onBlur) {
        _this.props.onBlur(event);
      }
    }, _this.onInnerClick = function (e) {
      if (_this.props.isDisabled) {
        e.stopPropagation();
      }
      return true;
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }
  /* eslint-disable react/no-unused-prop-types */

  (0, _createClass3.default)(Button, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.component !== nextProps.component) {
        delete this.customComponent;
      }
    }

    /* Swallow click events when the button is disabled to prevent inner child clicks bubbling up */

  }, {
    key: 'getStyledComponent',
    value: function getStyledComponent() {
      if (this.props.component) {
        if (!this.customComponent) {
          this.customComponent = createStyledComponent();
        }
        return this.customComponent;
      }

      if (this.props.href) {
        return this.props.isDisabled ? StyledSpan : StyledLink;
      }

      return StyledButton;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          iconBefore = _props.iconBefore,
          iconAfter = _props.iconAfter,
          innerRef = _props.innerRef,
          shouldFitContainer = _props.shouldFitContainer;


      var buttonProps = (0, _getButtonProps2.default)(this);
      var StyledComponent = this.getStyledComponent();

      var iconIsOnlyChild = !!(iconBefore && !iconAfter && !children || iconAfter && !iconBefore && !children);

      return _react2.default.createElement(
        StyledComponent,
        (0, _extends3.default)({ innerRef: innerRef }, buttonProps),
        _react2.default.createElement(
          _ButtonWrapper2.default,
          { onClick: this.onInnerClick, fit: !!shouldFitContainer },
          iconBefore ? _react2.default.createElement(
            _IconWrapper2.default,
            {
              spacing: buttonProps.spacing,
              isOnlyChild: iconIsOnlyChild
            },
            iconBefore
          ) : null,
          children ? _react2.default.createElement(
            _ButtonContent2.default,
            {
              followsIcon: !!iconBefore,
              spacing: buttonProps.spacing
            },
            children
          ) : null,
          iconAfter ? _react2.default.createElement(
            _IconWrapper2.default,
            {
              spacing: buttonProps.spacing,
              isOnlyChild: iconIsOnlyChild
            },
            iconAfter
          ) : null
        )
      );
    }
  }]);
  return Button;
}(_react.Component);

Button.defaultProps = {
  appearance: 'default',
  isDisabled: false,
  isSelected: false,
  spacing: 'default',
  type: 'button',
  shouldFitContainer: false
};
var ButtonBase = exports.ButtonBase = Button;

exports.default = (0, _analyticsNext.withAnalyticsContext)({
  component: 'button',
  package: _package.name,
  version: _package.version
})((0, _analyticsNext.withAnalyticsEvents)({
  onClick: function onClick(createAnalyticsEvent) {
    var consumerEvent = createAnalyticsEvent({
      action: 'click'
    });
    consumerEvent.clone().fire('atlaskit');

    return consumerEvent;
  }
})((0, _withDeprecationWarnings2.default)(Button)));