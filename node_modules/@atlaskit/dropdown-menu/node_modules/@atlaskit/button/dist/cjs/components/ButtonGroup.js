'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _withDeprecationWarnings = require('./withDeprecationWarnings');

var _withDeprecationWarnings2 = _interopRequireDefault(_withDeprecationWarnings);

var _ButtonGroup = require('../styled/ButtonGroup');

var _ButtonGroup2 = _interopRequireDefault(_ButtonGroup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ButtonGroup = function (_Component) {
  (0, _inherits3.default)(ButtonGroup, _Component);

  function ButtonGroup() {
    (0, _classCallCheck3.default)(this, ButtonGroup);
    return (0, _possibleConstructorReturn3.default)(this, (ButtonGroup.__proto__ || (0, _getPrototypeOf2.default)(ButtonGroup)).apply(this, arguments));
  }

  (0, _createClass3.default)(ButtonGroup, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          appearance = _props.appearance,
          children = _props.children;


      return _react2.default.createElement(
        _ButtonGroup2.default,
        null,
        _react.Children.map(children, function (child, idx) {
          if (child === null || child === false) {
            return child;
          }
          return _react2.default.createElement(
            _ButtonGroup.GroupItem,
            { key: idx },
            appearance ? (0, _react.cloneElement)(child, { appearance: appearance }) : child
          );
        })
      );
    }
  }]);
  return ButtonGroup;
}(_react.Component);

ButtonGroup.defaultProps = {
  appearance: 'default'
};
exports.default = (0, _withDeprecationWarnings2.default)(ButtonGroup);