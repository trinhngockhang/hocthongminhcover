import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';
import textContent from 'react-addons-text-content';

import { GroupTitle, GroupTitleText, GroupTitleAfter } from '../styled/ItemGroup';

var ItemGroup = function (_Component) {
  _inherits(ItemGroup, _Component);

  function ItemGroup() {
    _classCallCheck(this, ItemGroup);

    return _possibleConstructorReturn(this, (ItemGroup.__proto__ || _Object$getPrototypeOf(ItemGroup)).apply(this, arguments));
  }

  _createClass(ItemGroup, [{
    key: 'render',
    // eslint-disable-line react/sort-comp

    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          elemAfter = _props.elemAfter,
          isCompact = _props.isCompact,
          title = _props.title,
          label = _props.label,
          innerRef = _props.innerRef,
          role = _props.role;


      var ariaLabel = function () {
        if (label) {
          return textContent(label);
        }
        if (title) {
          return textContent(title);
        }
        return '';
      }();
      return React.createElement(
        'div',
        { 'aria-label': ariaLabel, role: role, ref: innerRef },
        title ? React.createElement(
          GroupTitle,
          { 'aria-hidden': 'true', isCompact: isCompact },
          React.createElement(
            GroupTitleText,
            null,
            title
          ),
          elemAfter ? React.createElement(
            GroupTitleAfter,
            {
              innerRef: function innerRef(r) {
                _this2.headingAfterElement = r;
              }
            },
            elemAfter
          ) : null
        ) : null,
        children
      );
    }
  }]);

  return ItemGroup;
}(Component);

ItemGroup.defaultProps = {
  role: 'group'
};
export default ItemGroup;