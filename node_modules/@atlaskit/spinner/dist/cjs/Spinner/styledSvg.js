'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.svgStyles = exports.getStrokeColor = undefined;

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _taggedTemplateLiteral2 = require('babel-runtime/helpers/taggedTemplateLiteral');

var _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);

var _templateObject = (0, _taggedTemplateLiteral3.default)(['\n    from { opacity: 0; }\n    to { opacity: 0; }\n  '], ['\n    from { opacity: 0; }\n    to { opacity: 0; }\n  ']),
    _templateObject2 = (0, _taggedTemplateLiteral3.default)(['\n    to { transform: rotate(360deg); }\n  '], ['\n    to { transform: rotate(360deg); }\n  ']),
    _templateObject3 = (0, _taggedTemplateLiteral3.default)(['\n    from { opacity: 0; }\n    to { opacity: 1; }\n  '], ['\n    from { opacity: 0; }\n    to { opacity: 1; }\n  ']),
    _templateObject4 = (0, _taggedTemplateLiteral3.default)(['\n    from { stroke-dashoffset: ', 'px; }\n    to { stroke-dashoffset: ', 'px; }\n  '], ['\n    from { stroke-dashoffset: ', 'px; }\n    to { stroke-dashoffset: ', 'px; }\n  ']),
    _templateObject5 = (0, _taggedTemplateLiteral3.default)(['\n  ', ';\n'], ['\n  ', ';\n']),
    _templateObject6 = (0, _taggedTemplateLiteral3.default)(['\n      animation: ', ';\n      fill: none;\n      stroke: ', ';\n      stroke-dasharray: ', 'px;\n      stroke-dashoffset: ', 'px;\n      stroke-linecap: round;\n      stroke-width: ', 'px;\n      transform-origin: center;\n    '], ['\n      animation: ', ';\n      fill: none;\n      stroke: ', ';\n      stroke-dasharray: ', 'px;\n      stroke-dashoffset: ', 'px;\n      stroke-linecap: round;\n      stroke-width: ', 'px;\n      transform-origin: center;\n    ']);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _theme = require('@atlaskit/theme');

var _constants = require('./constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getStrokeWidth = function getStrokeWidth(size) {
  return Math.round(size / 10);
};

var getStrokeCircumference = function getStrokeCircumference(size) {
  var strokeWidth = getStrokeWidth(size);
  var strokeRadius = size / 2 - strokeWidth / 2;
  return Math.PI * strokeRadius * 2;
};

/* Define keyframes statically to prevent a perfomance issue in styled components v1 where the keyframes function
 * does not cache previous values resulting in each spinner injecting the same keyframe definition
 * in the DOM.
 * This can be reverted to dynamic keyframes when we upgrade to styled components v2
 */
var keyframeNames = {
  noop: (0, _styledComponents.keyframes)(_templateObject),
  rotate: (0, _styledComponents.keyframes)(_templateObject2),
  enterOpacity: (0, _styledComponents.keyframes)(_templateObject3),
  smallEnterStroke: (0, _styledComponents.keyframes)(_templateObject4, getStrokeCircumference(_constants.SIZES_MAP.small), getStrokeCircumference(_constants.SIZES_MAP.small) * 0.8),
  mediumEnterStroke: (0, _styledComponents.keyframes)(_templateObject4, getStrokeCircumference(_constants.SIZES_MAP.medium), getStrokeCircumference(_constants.SIZES_MAP.medium) * 0.8),
  largeEnterStroke: (0, _styledComponents.keyframes)(_templateObject4, getStrokeCircumference(_constants.SIZES_MAP.large), getStrokeCircumference(_constants.SIZES_MAP.large) * 0.8),
  xlargeEnterStroke: (0, _styledComponents.keyframes)(_templateObject4, getStrokeCircumference(_constants.SIZES_MAP.xlarge), getStrokeCircumference(_constants.SIZES_MAP.xlarge) * 0.8)
};

/* If a standard size is used, we can use one of our statically defined keyframes, otherwise
 * we're forced to dynamically create the keyframe and incur a performance cost.
 */
var getEnterStrokeKeyframe = function getEnterStrokeKeyframe(size) {
  var standardSizeName = (0, _keys2.default)(_constants.SIZES_MAP).find(function (sizeName) {
    return size === _constants.SIZES_MAP[sizeName];
  });
  if (standardSizeName) {
    return keyframeNames[standardSizeName + 'EnterStroke'];
  }

  var circumference = getStrokeCircumference(size);
  return (0, _styledComponents.keyframes)(_templateObject4, circumference, circumference * 0.8);
};

var spinnerColor = (0, _theme.themed)({ light: _theme.colors.N500, dark: _theme.colors.N0 });
var spinnerColorInverted = (0, _theme.themed)({ light: _theme.colors.N0, dark: _theme.colors.N0 });

var getStrokeColor = function getStrokeColor(_ref) {
  var invertColor = _ref.invertColor,
      props = (0, _objectWithoutProperties3.default)(_ref, ['invertColor']);
  return invertColor ? spinnerColorInverted(props) : spinnerColor(props);
};

exports.getStrokeColor = getStrokeColor;
var svgStyles = exports.svgStyles = (0, _styledComponents.css)(_templateObject5, function (props) {
  var circumference = getStrokeCircumference(props.size);

  var idleRotation = '0.86s cubic-bezier(0.4, 0.15, 0.6, 0.85) infinite ' + keyframeNames.rotate;

  var spinUpStroke = '0.8s ease-in-out ' + getEnterStrokeKeyframe(props.size);

  var spinUpOpacity = '0.2s ease-in-out ' + _styledComponents.keyframes.enterOpacity;

  var activeAnimations = [idleRotation];
  if (props.phase === 'ENTER') {
    activeAnimations.push(spinUpStroke, spinUpOpacity);
  }

  return (0, _styledComponents.css)(_templateObject6, activeAnimations.join(', '), getStrokeColor, circumference, circumference * 0.8, getStrokeWidth(props.size));
});

var Svg = _styledComponents2.default.svg(_templateObject5, svgStyles);
Svg.displayName = 'SpinnerSvg';
exports.default = Svg;