'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.baseTypes = exports.ariaRoles = exports.supportsVoiceOver = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Item = require('../styled/Item');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var supportsVoiceOver = exports.supportsVoiceOver = /Mac OS X/.test(navigator.userAgent);

var ariaRoles = exports.ariaRoles = {
  checkbox: supportsVoiceOver ? 'checkbox' : 'menuitemcheckbox',
  link: 'menuitem',
  option: 'option',
  radio: supportsVoiceOver ? 'radio' : 'menuitemradio'
};
var baseTypes = exports.baseTypes = {
  default: 'link',
  values: ['link', 'radio', 'checkbox', 'option']
};

var Element = function (_PureComponent) {
  (0, _inherits3.default)(Element, _PureComponent);

  function Element() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Element);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Element.__proto__ || (0, _getPrototypeOf2.default)(Element)).call.apply(_ref, [this].concat(args))), _this), _this.handleMouseDown = function (e) {
      e.preventDefault();
      _this.props.handleMouseDown();
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }
  // this prevents the focus ring from appearing when the element is clicked.
  // It doesn't interfere with the onClick handler


  (0, _createClass3.default)(Element, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var isActive = props.isActive,
          isChecked = props.isChecked,
          isDisabled = props.isDisabled,
          isFocused = props.isFocused,
          isHidden = props.isHidden,
          isSelected = props.isSelected,
          isPrimary = props.isPrimary;

      var type = this.props.type || '';
      var appearanceProps = {
        isActive: isActive,
        isChecked: isChecked,
        isDisabled: isDisabled,
        isFocused: isFocused,
        isHidden: isHidden,
        isSelected: isSelected,
        isPrimary: isPrimary
      };

      var ariaProps = {
        'aria-checked': !!isChecked,
        'aria-disabled': !!isDisabled,
        'aria-hidden': !!isHidden,
        'aria-selected': !!isSelected
      };
      var commonProps = {
        'data-role': 'droplistItem',
        onClick: props.handleClick,
        onKeyPress: props.handleKeyPress,
        onMouseDown: this.handleMouseDown,
        onMouseOut: props.handleMouseOut,
        onMouseOver: props.handleMouseOver,
        onMouseUp: props.handleMouseUp,
        role: ariaRoles[type],
        title: props.title,
        tabIndex: props.type === 'option' ? null : 0
      };
      var testingProps = process.env.NODE_ENV === 'test' ? {
        'data-test-active': isActive,
        'data-test-checked': isChecked,
        'data-test-disabled': isDisabled,
        'data-test-hidden': isHidden,
        'data-test-selected': isSelected
      } : {};
      var consolidatedProps = (0, _extends3.default)({}, appearanceProps, ariaProps, commonProps, testingProps);

      if (props.href && !isDisabled) {
        return _react2.default.createElement(
          _Item.Anchor,
          (0, _extends3.default)({ href: props.href, target: props.target }, consolidatedProps),
          props.children
        );
      }

      return _react2.default.createElement(
        _Item.Span,
        consolidatedProps,
        props.children
      );
    }
  }]);
  return Element;
}(_react.PureComponent);

exports.default = Element;