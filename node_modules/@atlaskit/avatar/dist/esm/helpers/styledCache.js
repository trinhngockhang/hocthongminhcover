import _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';

var _templateObject = _taggedTemplateLiteral(['&,&:hover,&:active,&:focus{', '}'], ['&,&:hover,&:active,&:focus{', '}']),
    _templateObject2 = _taggedTemplateLiteral(['\n    ', ';\n  '], ['\n    ', ';\n  ']),
    _templateObject3 = _taggedTemplateLiteral(['\n    a& {\n      ', ';\n    }\n  '], ['\n    a& {\n      ', ';\n    }\n  ']);

import styled from 'styled-components';
import CustomComponentProxy from '../components/CustomComponentProxy';

// This is necessary because we don't know what DOM element the custom component will render.
export default (function (styles) {
  var StyledCustomComponent = styled(CustomComponentProxy)(_templateObject, styles);
  var StyledButton = styled.button(_templateObject2, styles);
  var StyledLink = styled.a(_templateObject3, styles);
  var StyledSpan = styled.span(_templateObject2, styles);

  return function getStyled(_ref) {
    var component = _ref.component,
        href = _ref.href,
        onClick = _ref.onClick;

    if (component) {
      return StyledCustomComponent;
    } else if (href) {
      return StyledLink;
    } else if (onClick) {
      return StyledButton;
    }
    return StyledSpan;
  };
});