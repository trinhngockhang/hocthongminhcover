import _defineProperty from 'babel-runtime/helpers/defineProperty';
import _Object$keys from 'babel-runtime/core-js/object/keys';
import _extends from 'babel-runtime/helpers/extends';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';
import { getDisplayName } from '../utils';


export default function mapProps(mapping) {
  return function (DecoratedComponent
  // TODO: type this correctly
  ) {
    var _class, _temp2;

    return _temp2 = _class = function (_Component) {
      _inherits(MapProps, _Component);

      function MapProps() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, MapProps);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MapProps.__proto__ || _Object$getPrototypeOf(MapProps)).call.apply(_ref, [this].concat(args))), _this), _this.blur = function () {
          if (_this.component.blur) _this.component.blur();
        }, _this.focus = function () {
          if (_this.component.focus) _this.component.focus();
        }, _this.setComponent = function (component) {
          _this.component = component;
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }

      // expose blur/focus to consumers via ref


      _createClass(MapProps, [{
        key: 'render',
        value: function render() {
          var _this2 = this;

          var mapped = _extends({}, this.props, _Object$keys(mapping).reduce(function (acc, key) {
            return _extends({}, acc, _defineProperty({}, key, mapping[key](_this2.props)));
          }, {}));

          return React.createElement(DecoratedComponent, _extends({ ref: this.setComponent }, mapped));
        }
      }]);

      return MapProps;
    }(Component), _class.displayName = getDisplayName('mapProps', DecoratedComponent), _class.DecoratedComponent = DecoratedComponent, _temp2;
  };
}