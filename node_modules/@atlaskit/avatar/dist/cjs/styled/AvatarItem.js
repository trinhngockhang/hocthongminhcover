'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SecondaryText = exports.PrimaryText = exports.Content = undefined;

var _taggedTemplateLiteral2 = require('babel-runtime/helpers/taggedTemplateLiteral');

var _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);

var _templateObject = (0, _taggedTemplateLiteral3.default)(['\n    align-items: center;\n    background-color: ', ';\n    border-radius: ', 'px;\n    border: 2px solid ', ';\n    box-sizing: content-box;\n    color: inherit;\n    cursor: ', ';\n    display: flex;\n    font-size: inherit;\n    font-style: normal;\n    font-weight: normal;\n    line-height: 1;\n    opacity: ', ';\n    outline: ', ';\n    margin: 0;\n    padding: ', 'px;\n    pointer-events: ', ';\n    text-align: left;\n    text-decoration: none;\n    width: 100%;\n  '], ['\n    align-items: center;\n    background-color: ', ';\n    border-radius: ', 'px;\n    border: 2px solid ', ';\n    box-sizing: content-box;\n    color: inherit;\n    cursor: ', ';\n    display: flex;\n    font-size: inherit;\n    font-style: normal;\n    font-weight: normal;\n    line-height: 1;\n    opacity: ', ';\n    outline: ', ';\n    margin: 0;\n    padding: ', 'px;\n    pointer-events: ', ';\n    text-align: left;\n    text-decoration: none;\n    width: 100%;\n  ']),
    _templateObject2 = (0, _taggedTemplateLiteral3.default)(['\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  '], ['\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  ']),
    _templateObject3 = (0, _taggedTemplateLiteral3.default)(['\n    max-width: 100%;\n    min-width: 0;\n  '], ['\n    max-width: 100%;\n    min-width: 0;\n  ']),
    _templateObject4 = (0, _taggedTemplateLiteral3.default)(['\n  ', ' flex: 1 1 100%;\n  line-height: 1.4;\n  padding-left: ', 'px;\n'], ['\n  ', ' flex: 1 1 100%;\n  line-height: 1.4;\n  padding-left: ', 'px;\n']),
    _templateObject5 = (0, _taggedTemplateLiteral3.default)(['\n  ', ' color: ', ';\n'], ['\n  ', ' color: ', ';\n']),
    _templateObject6 = (0, _taggedTemplateLiteral3.default)(['\n  ', ' color: ', ';\n  font-size: 0.85em;\n'], ['\n  ', ' color: ', ';\n  font-size: 0.85em;\n']);

exports.getBackgroundColor = getBackgroundColor;
exports.getStyles = getStyles;

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _theme = require('@atlaskit/theme');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var activeBackgroundColor = (0, _theme.themed)({
  light: _theme.colors.B50,
  dark: _theme.colors.DN40
});
var hoverBackgroundColor = (0, _theme.themed)({
  light: _theme.colors.N30,
  dark: _theme.colors.DN50
});
var focusBorderColor = (0, _theme.themed)({
  light: _theme.colors.B200,
  dark: _theme.colors.B75
});

// $FlowFixMe - add types for arguments
function getBackgroundColor(_ref) {
  var backgroundColor = _ref.backgroundColor,
      href = _ref.href,
      isActive = _ref.isActive,
      isHover = _ref.isHover,
      isSelected = _ref.isSelected,
      onClick = _ref.onClick;

  var isInteractive = href || onClick;

  var themedBackgroundColor = backgroundColor || _theme.colors.background;

  // Interaction: Hover
  if (isInteractive && (isHover || isSelected)) {
    themedBackgroundColor = hoverBackgroundColor;
  }

  // Interaction: Active
  if (isInteractive && isActive) {
    themedBackgroundColor = activeBackgroundColor;
  }

  return themedBackgroundColor;
}

// $FlowFixMe - add types for arguments
function getStyles(_ref2) {
  var href = _ref2.href,
      isActive = _ref2.isActive,
      isDisabled = _ref2.isDisabled,
      isFocus = _ref2.isFocus,
      onClick = _ref2.onClick;

  var isInteractive = href || onClick;

  var borderColor = 'transparent';
  var cursor = 'auto';
  var opacity = 1;
  var outline = 'none';
  var pointerEvents = 'auto';

  // Interaction: Focus
  if (isInteractive && isFocus && !isActive) {
    outline = 'none';
    borderColor = focusBorderColor;
  }

  // Disabled
  if (isDisabled) {
    cursor = 'not-allowed';
    opacity = 0.75;
    pointerEvents = 'none';
  }

  // Interactive
  if (isInteractive) {
    cursor = 'pointer';
  }
  return (0, _styledComponents.css)(_templateObject, getBackgroundColor, _theme.borderRadius, borderColor, cursor, opacity, outline, _theme.math.divide(_theme.gridSize, 2), pointerEvents);
}

var truncateText = function truncateText(p) {
  return p.truncate && (0, _styledComponents.css)(_templateObject2);
};
var truncateTextFlexParent = function truncateTextFlexParent(p) {
  return p.truncate && (0, _styledComponents.css)(_templateObject3);
};

var Content = exports.Content = _styledComponents2.default.div(_templateObject4, truncateTextFlexParent, _theme.gridSize);
var PrimaryText = exports.PrimaryText = _styledComponents2.default.div(_templateObject5, truncateText, _theme.colors.text);
var SecondaryText = exports.SecondaryText = _styledComponents2.default.div(_templateObject6, truncateText, _theme.colors.subtleText);