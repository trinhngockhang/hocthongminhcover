'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Svg = exports.Slot = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _theme = require('@atlaskit/theme');

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// if image is loading, we hide the image so it doesn't obscure the gray loading
// block until the source image is loaded.
var getBackgroundColor = function getBackgroundColor(_ref) {
  var isLoading = _ref.isLoading;
  return isLoading ? (0, _theme.themed)({ light: _theme.colors.N40, dark: _theme.colors.DN50 }) : 'transparent';
};
var Slot = exports.Slot = function Slot(_ref2) {
  var isLoading = _ref2.isLoading,
      appearance = _ref2.appearance,
      size = _ref2.size,
      backgroundImage = _ref2.backgroundImage,
      label = _ref2.label,
      role = _ref2.role;
  return _react2.default.createElement('span', {
    style: {
      backgroundColor: getBackgroundColor({ isLoading: isLoading }),
      backgroundImage: backgroundImage ? 'url(' + backgroundImage + ')' : null,
      backgroundPosition: 'center',
      backgroundRepeat: 'no-repeat',
      backgroundSize: 'cover',
      borderRadius: (0, _utils.getBorderRadius)({ appearance: appearance, size: size }),
      display: 'flex',
      flex: '1 1 100%',
      height: '100%',
      width: '100%'
    },
    role: role,
    'aria-label': label
  });
};

var Svg = function Svg(_ref3) {
  var appearance = _ref3.appearance,
      size = _ref3.size,
      children = _ref3.children,
      otherProps = (0, _objectWithoutProperties3.default)(_ref3, ['appearance', 'size', 'children']);
  return _react2.default.createElement(
    'svg',
    (0, _extends3.default)({
      style: {
        backgroundColor: getBackgroundColor({ isLoading: false }),
        borderRadius: (0, _utils.getBorderRadius)({ appearance: appearance, size: size }),
        height: '100%',
        width: '100%'
      }
    }, otherProps),
    children
  );
};
exports.Svg = Svg;