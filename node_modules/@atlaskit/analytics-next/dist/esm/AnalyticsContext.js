import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import { Children, Component } from 'react';
import PropTypes from 'prop-types';

var ContextTypes = {
  getAtlaskitAnalyticsContext: PropTypes.func
};

var AnalyticsContext = function (_Component) {
  _inherits(AnalyticsContext, _Component);

  function AnalyticsContext() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, AnalyticsContext);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AnalyticsContext.__proto__ || _Object$getPrototypeOf(AnalyticsContext)).call.apply(_ref, [this].concat(args))), _this), _this.getChildContext = function () {
      return {
        getAtlaskitAnalyticsContext: _this.getAnalyticsContext
      };
    }, _this.getAnalyticsContext = function () {
      var data = _this.props.data;
      var getAtlaskitAnalyticsContext = _this.context.getAtlaskitAnalyticsContext;

      var ancestorData = typeof getAtlaskitAnalyticsContext === 'function' && getAtlaskitAnalyticsContext() || [];
      return [].concat(_toConsumableArray(ancestorData), [data]);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(AnalyticsContext, [{
    key: 'render',
    value: function render() {
      return Children.only(this.props.children);
    }
  }]);

  return AnalyticsContext;
}(Component);

AnalyticsContext.contextTypes = ContextTypes;
AnalyticsContext.childContextTypes = ContextTypes;
export default AnalyticsContext;