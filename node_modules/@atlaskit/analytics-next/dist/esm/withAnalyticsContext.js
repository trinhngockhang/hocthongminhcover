import _extends from 'babel-runtime/helpers/extends';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';

import AnalyticsContext from './AnalyticsContext';

export default function withAnalyticsContext() {
  var defaultData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return function (WrappedComponent) {
    var _class, _temp;

    return _temp = _class = function (_Component) {
      _inherits(WithAnalyticsContext, _Component);

      function WithAnalyticsContext() {
        _classCallCheck(this, WithAnalyticsContext);

        return _possibleConstructorReturn(this, (WithAnalyticsContext.__proto__ || _Object$getPrototypeOf(WithAnalyticsContext)).apply(this, arguments));
      }

      _createClass(WithAnalyticsContext, [{
        key: 'render',
        value: function render() {
          var _props = this.props,
              analyticsContext = _props.analyticsContext,
              props = _objectWithoutProperties(_props, ['analyticsContext']);

          var data = _extends({}, defaultData, analyticsContext);
          return React.createElement(
            AnalyticsContext,
            { data: data },
            React.createElement(WrappedComponent, props)
          );
        }
      }]);

      return WithAnalyticsContext;
    }(Component), _class.displayName = 'WithAnalyticsContext(' + (WrappedComponent.displayName || WrappedComponent.name) + ')', _class.defaultProps = {
      analyticsContext: {}
    }, _temp;
  };
}