import _defineProperty from 'babel-runtime/helpers/defineProperty';
import _typeof from 'babel-runtime/helpers/typeof';
import _Object$keys from 'babel-runtime/core-js/object/keys';
import _extends from 'babel-runtime/helpers/extends';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';
import PropTypes from 'prop-types';

import UIAnalyticsEvent from './UIAnalyticsEvent';


export default function withAnalyticsEvents() {
  var createEventMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return function (WrappedComponent) {
    var _class, _temp2, _initialiseProps;

    return _temp2 = _class = function (_Component) {
      _inherits(WithAnalyticsEvents, _Component);

      function WithAnalyticsEvents() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, WithAnalyticsEvents);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = WithAnalyticsEvents.__proto__ || _Object$getPrototypeOf(WithAnalyticsEvents)).call.apply(_ref, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);
      }

      _createClass(WithAnalyticsEvents, [{
        key: 'render',
        value: function render() {
          var props = _extends({}, this.props, this.mapCreateEventsToProps());
          return React.createElement(WrappedComponent, _extends({}, props, {
            createAnalyticsEvent: this.createAnalyticsEvent
          }));
        }
      }]);

      return WithAnalyticsEvents;
    }(Component), _class.displayName = 'WithAnalyticsEvents(' + (WrappedComponent.displayName || WrappedComponent.name) + ')', _class.contextTypes = {
      getAtlaskitAnalyticsEventHandlers: PropTypes.func,
      getAtlaskitAnalyticsContext: PropTypes.func
    }, _initialiseProps = function _initialiseProps() {
      var _this2 = this;

      this.createAnalyticsEvent = function (payload) {
        var _context = _this2.context,
            getAtlaskitAnalyticsEventHandlers = _context.getAtlaskitAnalyticsEventHandlers,
            getAtlaskitAnalyticsContext = _context.getAtlaskitAnalyticsContext;

        var context = typeof getAtlaskitAnalyticsContext === 'function' && getAtlaskitAnalyticsContext() || [];
        var handlers = typeof getAtlaskitAnalyticsEventHandlers === 'function' && getAtlaskitAnalyticsEventHandlers() || [];
        return new UIAnalyticsEvent({ context: context, handlers: handlers, payload: payload });
      };

      this.mapCreateEventsToProps = function () {
        return _Object$keys(createEventMap).reduce(function (modified, propCallbackName) {
          var eventCreator = createEventMap[propCallbackName];
          var providedCallback = _this2.props[propCallbackName];
          if (!['object', 'function'].includes(typeof eventCreator === 'undefined' ? 'undefined' : _typeof(eventCreator))) {
            return modified;
          }
          var modifiedCallback = function modifiedCallback() {
            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              args[_key2] = arguments[_key2];
            }

            var analyticsEvent = typeof eventCreator === 'function' ? eventCreator(_this2.createAnalyticsEvent, _this2.props) : _this2.createAnalyticsEvent(eventCreator);

            if (providedCallback) {
              providedCallback.apply(undefined, args.concat([analyticsEvent]));
            }
          };
          return _extends({}, modified, _defineProperty({}, propCallbackName, modifiedCallback));
        }, {});
      };
    }, _temp2;
  };
}