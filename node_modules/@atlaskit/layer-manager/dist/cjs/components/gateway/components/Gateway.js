'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _GatewayRegistry = require('./GatewayRegistry');

var _GatewayRegistry2 = _interopRequireDefault(_GatewayRegistry);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Gateway = function (_Component) {
  (0, _inherits3.default)(Gateway, _Component);

  function Gateway(props, context) {
    (0, _classCallCheck3.default)(this, Gateway);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Gateway.__proto__ || (0, _getPrototypeOf2.default)(Gateway)).call(this, props, context));

    _this.id = '';

    _this.gatewayRegistry = context.gatewayRegistry;
    return _this;
  }

  (0, _createClass3.default)(Gateway, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.id = this.gatewayRegistry.register(this.props.into, this.props.children);
      this.renderIntoGatewayNode(this.props);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(props) {
      if (!props.shouldBlockRender) {
        this.gatewayRegistry.clearChild(this.props.into, this.id);
        this.renderIntoGatewayNode(props);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.gatewayRegistry.unregister(this.props.into, this.id);
    }
  }, {
    key: 'renderIntoGatewayNode',
    value: function renderIntoGatewayNode(props) {
      this.gatewayRegistry.addChild(this.props.into, this.id, props.children);
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }]);
  return Gateway;
}(_react.Component);

Gateway.contextTypes = {
  gatewayRegistry: _propTypes2.default.instanceOf(_GatewayRegistry2.default).isRequired
};
exports.default = Gateway;