'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = PortalWithThemeProvider;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _styledComponents = require('styled-components');

var _reactTransitionGroup = require('react-transition-group');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FirstChild = function FirstChild(_ref) {
  var children = _ref.children;
  return _react.Children.toArray(children)[0] || null;
};

var Portal = function (_Component) {
  (0, _inherits3.default)(Portal, _Component);

  function Portal() {
    var _ref2;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Portal);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref2 = Portal.__proto__ || (0, _getPrototypeOf2.default)(Portal)).call.apply(_ref2, [this].concat(args))), _this), _this.portalElement = null, _this.renderChildren = function (children) {
      var _this$props = _this.props,
          theme = _this$props.theme,
          withTransitionGroup = _this$props.withTransitionGroup;


      return _react2.default.createElement(
        _styledComponents.ThemeProvider,
        { theme: theme },
        withTransitionGroup ? _react2.default.createElement(
          _reactTransitionGroup.TransitionGroup,
          { component: FirstChild },
          children
        ) : children
      );
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Portal, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var node = document.createElement('span');
      if (document.body) {
        document.body.appendChild(node);
        this.portalElement = node;

        // mounting components in portals can have side effects (e.g. modals
        // applying scroll / focus locks). Because the unmounting of other portals
        // happens asynchronously, we wait for a moment before mounting new
        // portals to avoid race conditions in unmount handlers
        setTimeout(function () {
          return _this2.componentDidUpdate();
        }, 1);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var children = this.props.children;

      if (this.portalElement) {
        var portal = this.portalElement;
        (0, _reactDom.render)(this.renderChildren(children), portal);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      // re-render an empty react tree into the portal element so that any
      // mounted components get cleaned up and have a chance to complete their
      // lifecycle before the portal is removed from the dom entirely
      if (this.portalElement) {
        var portal = this.portalElement;
        (0, _reactDom.render)(this.renderChildren(), portal, function () {
          // allow time for transitions to complete before the dom is cleaned up
          // five seconds is an arbitary number, but is more than any of our
          // animations need to complete
          setTimeout(function () {
            var target = document.body;
            if (!target) return;
            (0, _reactDom.unmountComponentAtNode)(portal);
            target.removeChild(portal);
          }, 5000);
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }]);
  return Portal;
}(_react.Component);

// Pass theme through to be consumed
// TODO: @thejameskyle - Fix Styled Components for Flow 53+


var PortalWithTheme = (0, _styledComponents.withTheme)(Portal);

// Wrap the default export in a ThemeProvider component so that withTheme
// doesn't freak out if the app doesn't have one already
function PortalWithThemeProvider(props) {
  return _react2.default.createElement(
    _styledComponents.ThemeProvider,
    { theme: {} },
    _react2.default.createElement(PortalWithTheme, props)
  );
}