import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import GatewayRegistry from './GatewayRegistry';

var GatewayProvider = function (_Component) {
  _inherits(GatewayProvider, _Component);

  function GatewayProvider(props, context) {
    _classCallCheck(this, GatewayProvider);

    var _this = _possibleConstructorReturn(this, (GatewayProvider.__proto__ || _Object$getPrototypeOf(GatewayProvider)).call(this, props, context));

    _this.gatewayRegistry = new GatewayRegistry();
    return _this;
  }

  _createClass(GatewayProvider, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        gatewayRegistry: this.gatewayRegistry
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          Tag = _props.component;


      return React.createElement(
        Tag,
        null,
        children
      );
    }
  }]);

  return GatewayProvider;
}(Component);

GatewayProvider.childContextTypes = {
  gatewayRegistry: PropTypes.instanceOf(GatewayRegistry).isRequired
};
GatewayProvider.defaultProps = {
  component: 'div'
};
export default GatewayProvider;