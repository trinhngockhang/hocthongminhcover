import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import { Component, createElement } from 'react';
import PropTypes from 'prop-types';
import GatewayRegistry from './GatewayRegistry';

var GatewayDest = function (_Component) {
  _inherits(GatewayDest, _Component);

  function GatewayDest(props, context) {
    _classCallCheck(this, GatewayDest);

    var _this = _possibleConstructorReturn(this, (GatewayDest.__proto__ || _Object$getPrototypeOf(GatewayDest)).call(this, props, context));

    _this.state = {
      children: null
    };

    _this.gatewayRegistry = context.gatewayRegistry;
    return _this;
  }

  _createClass(GatewayDest, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.gatewayRegistry.addContainer(this.props.name, this);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.gatewayRegistry.removeContainer(this.props.name);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          component = _props.component,
          attrs = _objectWithoutProperties(_props, ['component']);

      delete attrs.name;

      return createElement(component, attrs, this.state.children);
    }
  }]);

  return GatewayDest;
}(Component);

GatewayDest.contextTypes = {
  gatewayRegistry: PropTypes.instanceOf(GatewayRegistry).isRequired
};
GatewayDest.defaultProps = {
  component: 'div'
};
export default GatewayDest;