'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _layerManager = require('@atlaskit/layer-manager');

var _Animation = require('./Animation');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Tip = function (_Component) {
  (0, _inherits3.default)(Tip, _Component);

  function Tip() {
    (0, _classCallCheck3.default)(this, Tip);
    return (0, _possibleConstructorReturn3.default)(this, (Tip.__proto__ || (0, _getPrototypeOf2.default)(Tip)).apply(this, arguments));
  }

  (0, _createClass3.default)(Tip, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          component = _props.component,
          coordinates = _props.coordinates,
          immediatelyHide = _props.immediatelyHide,
          immediatelyShow = _props.immediatelyShow,
          position = _props.position,
          truncate = _props.truncate;

      // NOTE: `props.in` is NOT public API

      var transitionIn = this.props.in;

      return _react2.default.createElement(
        _Animation.Slide,
        {
          component: component,
          immediatelyHide: immediatelyHide,
          immediatelyShow: immediatelyShow,
          'in': transitionIn,
          position: position,
          style: coordinates,
          truncate: truncate
        },
        children
      );
    }
  }]);
  return Tip;
}(_react.Component);
/* eslint-disable react/prefer-stateless-function */

exports.default = (0, _layerManager.withRenderTarget)({
  target: 'tooltip',
  withTransitionGroup: true
},
// $FlowFixMe TEMPORARY
Tip);