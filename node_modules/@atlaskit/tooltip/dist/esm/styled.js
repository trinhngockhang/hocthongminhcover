import _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';

var _templateObject = _taggedTemplateLiteral(['\n        max-width: 420px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      '], ['\n        max-width: 420px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      ']),
    _templateObject2 = _taggedTemplateLiteral(['\n  z-index: ', ';\n  pointer-events: none;\n  position: fixed;\n'], ['\n  z-index: ', ';\n  pointer-events: none;\n  position: fixed;\n']),
    _templateObject3 = _taggedTemplateLiteral(['\n  background-color: ', ';\n  border-radius: ', 'px;\n  box-sizing: border-box;\n  color: ', ';\n  font-size: 12px;\n  left: 0;\n  line-height: 1.3;\n  max-width: 240px;\n  padding: 2px 6px;\n  top: 0;\n  ', ';\n'], ['\n  background-color: ', ';\n  border-radius: ', 'px;\n  box-sizing: border-box;\n  color: ', ';\n  font-size: 12px;\n  left: 0;\n  line-height: 1.3;\n  max-width: 240px;\n  padding: 2px 6px;\n  top: 0;\n  ', ';\n']),
    _templateObject4 = _taggedTemplateLiteral(['\n  display: inline-block;\n'], ['\n  display: inline-block;\n']);

import styled, { css } from 'styled-components';
import { borderRadius, colors, themed, layers } from '@atlaskit/theme';

var backgroundColor = themed({
  light: colors.N800,
  dark: colors.DN0
});
var textColor = themed({
  light: colors.N0,
  dark: colors.DN600
});

var truncate = function truncate(p) {
  return p.truncate ? css(_templateObject) : '';
};

export var TooltipPrimitive = styled.div(_templateObject2, layers.tooltip);

export var Tooltip = styled(TooltipPrimitive)(_templateObject3, backgroundColor, borderRadius, textColor, truncate);

// The inline-block here is needed to keep the tooltip appearing in the correct position
// when nested inside a wider parent (see position: relative example).
export var Target = styled.div(_templateObject4);