import inViewport from './inViewport';

var FLIPPED_POSITION = {
  top: 'bottom',
  right: 'left',
  bottom: 'top',
  left: 'right'
};

function getCoords(_ref) {
  var targetRect = _ref.targetRect,
      tooltipRect = _ref.tooltipRect,
      gutter = _ref.gutter;

  return {
    top: {
      top: targetRect.top - (tooltipRect.height + gutter),
      right: 0,
      bottom: 0,
      left: targetRect.left + (targetRect.width - tooltipRect.width) / 2
    },
    right: {
      top: targetRect.top + (targetRect.height - tooltipRect.height) / 2,
      right: targetRect.right + gutter + tooltipRect.width, // used to calculate flip
      bottom: 0,
      left: targetRect.right + gutter
    },
    bottom: {
      top: targetRect.bottom + gutter,
      right: 0,
      bottom: targetRect.bottom + gutter + tooltipRect.height, // used to calculate flip
      left: targetRect.left + (targetRect.width - tooltipRect.width) / 2
    },
    left: {
      top: targetRect.top + (targetRect.height - tooltipRect.height) / 2,
      right: 0,
      bottom: 0,
      left: targetRect.left - (tooltipRect.width + gutter)
    }
  };
}

export default function getPosition(_ref2) {
  var position = _ref2.position,
      target = _ref2.target,
      tooltip = _ref2.tooltip;

  var noPosition = {
    coordinates: { left: 0, top: 0 },
    position: 'bottom'
  };

  /* eslint-disable no-console */
  if (!position) console.error('Property "position" is required.');
  if (!target) console.error('Property "target" is required.');
  if (!tooltip) console.error('Property "tooltip" is required.');
  if (!position || !target || !tooltip) return noPosition;
  /* eslint-enable no-console */

  // get the original coordinates
  var gutter = 8;
  var targetRect = target.getBoundingClientRect();
  var tooltipRect = tooltip.getBoundingClientRect();

  var POSITIONS = getCoords({ targetRect: targetRect, tooltipRect: tooltipRect, gutter: gutter });

  // set tooltip positions before viewport check
  var attemptedPosition = POSITIONS[position];

  // check if the tooltip is in view or must be flipped
  var adjustedPosition = inViewport(attemptedPosition) ? position : FLIPPED_POSITION[position];

  // adjust positions with (possibly) flipped position
  var left = POSITIONS[adjustedPosition].left;
  var top = POSITIONS[adjustedPosition].top;

  return {
    coordinates: { left: left, top: top },
    position: adjustedPosition
  };
}