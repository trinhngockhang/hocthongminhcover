import _extends from 'babel-runtime/helpers/extends';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';

/* eslint-disable react/require-default-props */

import React from 'react';
import { Transition } from 'react-transition-group';


var ENTER_DURATION = 120;
var EXIT_DURATION = 120;
var easing = 'cubic-bezier(0.23, 1, 0.32, 1)'; // easeOutQuint
var distance = 8;

// BASE
// ==============================

/**
  To achieve a "lazy mount" and clean up our component after unmounting,
  the following props must be set to true:
  - appear
  - mountOnEnter
  - unmountOnExit

  Read more https://reactcommunity.org/react-transition-group/#Transition-prop-mountOnEnter
*/

function Animation(_ref) {
  var Tag = _ref.component,
      hasEntered = _ref.in,
      onEnter = _ref.onEnter,
      onEntering = _ref.onEntering,
      onEntered = _ref.onEntered,
      onExit = _ref.onExit,
      onExiting = _ref.onExiting,
      onExited = _ref.onExited,
      style = _ref.style,
      styleDefault = _ref.styleDefault,
      timeout = _ref.timeout,
      transition = _ref.transition,
      props = _objectWithoutProperties(_ref, ['component', 'in', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited', 'style', 'styleDefault', 'timeout', 'transition']);

  var transitionProps = {
    appear: true,
    in: hasEntered,
    mountOnEnter: true,
    onEnter: onEnter,
    onEntering: onEntering,
    onEntered: onEntered,
    onExit: onExit,
    onExiting: onExiting,
    onExited: onExited,
    timeout: timeout,
    unmountOnExit: true
  };

  return React.createElement(
    Transition,
    transitionProps,
    function (status) {
      var styles = _extends({}, style, styleDefault, transition[status]);

      return React.createElement(Tag, _extends({ style: styles }, props));
    }
  );
}
var DefaultComponent = function DefaultComponent(props) {
  return React.createElement('div', props);
};

Animation.defaultProps = {
  component: DefaultComponent
};

// SLIDE
// ==============================

var xPos = {
  left: distance,
  right: -distance,
  top: 0,
  bottom: 0
};
var yPos = {
  bottom: -distance,
  top: distance,
  left: 0,
  right: 0
};

// eslint-disable-next-line import/prefer-default-export
var Slide = function Slide(_ref2) {
  var immediatelyHide = _ref2.immediatelyHide,
      immediatelyShow = _ref2.immediatelyShow,
      position = _ref2.position,
      props = _objectWithoutProperties(_ref2, ['immediatelyHide', 'immediatelyShow', 'position']);

  var horizontalOffset = xPos[position];
  var verticalOffset = yPos[position];

  var restingTransform = 'translate3d(0, 0, 0)';
  var timeout = {
    enter: immediatelyShow ? 1 : ENTER_DURATION,
    exit: immediatelyHide ? 1 : EXIT_DURATION
  };

  return React.createElement(Animation, _extends({
    styleDefault: {
      transition: 'transform ' + timeout.enter + 'ms ' + easing + ', opacity ' + timeout.enter + 'ms linear',
      transform: restingTransform
    },
    transition: {
      entering: {
        opacity: 0,
        transform: 'translate3d(' + horizontalOffset + 'px, ' + verticalOffset + 'px, 0)'
      },
      entered: {
        opacity: 1,
        transform: restingTransform
      },
      exiting: {
        opacity: 0,
        transition: 'opacity ' + timeout.exit + 'ms linear'
      }
    },
    timeout: timeout
  }, props));
};
export { Slide };