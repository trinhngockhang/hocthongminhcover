import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import { Children, Component } from 'react';
import { render, unmountComponentAtNode } from 'react-dom';

var Portal = function (_Component) {
  _inherits(Portal, _Component);

  function Portal() {
    _classCallCheck(this, Portal);

    return _possibleConstructorReturn(this, (Portal.__proto__ || _Object$getPrototypeOf(Portal)).apply(this, arguments));
  }

  _createClass(Portal, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var body = document.body;
      if (body) {
        var node = document.createElement('div');
        body.appendChild(node);
        this.portalElement = node;

        this.componentDidUpdate();
      }
    } // eslint-disable-line react/sort-comp

  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var children = this.props.children;

      render(Children.only(children), this.portalElement);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var target = document.body;
      var portal = this.portalElement;
      if (target && portal) {
        unmountComponentAtNode(portal);
        target.removeChild(portal);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }]);

  return Portal;
}(Component);

export default Portal;